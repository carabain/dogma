-----------------------------

Chain initialiseren met genesis block:
geth --datadir /c/ws/blockchain/DogmaChain/data init doc/setup/genesis.json

Chain starten:
geth --datadir /c/ws/blockchain/DogmaChain/data --networkid 2636 --rpc --rpcapi personal,db,eth,net,web3 console 2>> /c/ws/blockchain/DogmaChain/DogmaChain.log

Extra console:
geth attach \\\\.\\pipe\\geth.ipc

Log volgen:
tail -f /c/ws/blockchain/DogmaChain/DogmaChain.log

-----------------------------

Account maken:
personal.newAccount()

Account unlocken:
personal.unlockAccount(web3.eth.accounts[0])

Saldo opvragen:
eth.getBalance(web3.eth.accounts[0])

Miner starten/stoppen:
miner.start() / miner.stop()

-----------------------------

Solidity smart contract compileren:
solc -o target --bin --abi doc/Greeter.sol --overwrite

 web3j solidity generate target/greeter.bin target/greeter.abi -o dogma-service/src/main/java -p nl.dogma.service

  web3j solidity generate target/mortal.bin target/mortal.abi -o dogma-service/src/main/java -p nl.dogma.service


Smart contract deployen
loadScript("src/deploy_greeter.js")

Controleren of smart contract aanwezig is (als er iets andrs dan 0x verschijnt):
eth.getCode(greeter.address)

Weer opruimen als je het contract niet meer wilt:
greeter.kill.sendTransaction({from:eth.accounts[0]})

----

(https://kndrck.co/posts/ethereum_oracles_a_simple_guide/)

Truffle installeren:
npm install -g truffle ethereumjs-testrpc

Naar je project dir gaan:
cd appelmans

Project verder inrichten:
npm install truffle-contract web3 bluebird fetch --save

truffle.js aanpassen:

module.exports = {
  // See <http://truffleframework.com/docs/advanced/configuration>
  // to customize your Truffle configuration!
  migrations_directory: "./migrations",
  networks: {
    development: {
      host: "localhost",
      port: 8545,
      network_id: "*", // Match any network id
      gas: 4710000
    }
  }
}

Run testrpc in a separate terminal, and then truffle compile && truffle migrate. This compiles our contracts and deploys them onto our private testnet.




-----
var greeterContract = web3.eth.contract(<contents of the file Greeter.abi>)
var greeterCompiled = "0x" + "<contents of the file Greeter.bin"
var greeter = greeterContract.new(
   _greeting,
   {
     from: web3.eth.accounts[0],
     data: greeterCompiled,
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
